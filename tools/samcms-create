#!/bin/bash
PREFIX=`echo ${BASH_SOURCE[0]} | awk -F /usr/bin '{print($1)}'`
if [ -f ${PREFIX}/etc/default/samcms ]; then
	. ${PREFIX}/etc/default/samcms
fi

DB_USER_NAME=${SAMCMS_DB_USER}`test ! -z ${SAMCMS_DB_USER}||echo "postgres"`;
DB_DB_PASSWORD=${SAMCMS_DB_PASSWORD}`test ! -z ${SAMCMS_DB_PASSWORD}||read -p "Enter password for user ${DB_USER_NAME}[Enter]" -s -e`;
echo -e "DB: user=${DB_USER_NAME}, password=${DB_DB_PASSWORD}";
DB_HOST=${SAMCMS_DB_ADDRESS}`test ! -z ${SAMCMS_DB_ADDRESS}||echo "127.0.0.1"`;
DB_DB_NAME=${SAMCMS_DB_NAME}`test ! -z ${SAMCMS_DB_NAME}||echo "samcms"`;

CMD="psql -h ${DB_HOST} -U ${DB_USER_NAME} -w ${DB_DB_PASSWORD} -d ${DB_DB_NAME} -f"

if ! [ -d ${PWD}/log ]; then
	mkdir ${PWD}/log
fi

loginit() {
	if [ -e ${PWD}/log/install_log ]; then
		rm ${PWD}/log/install_log
	fi
	touch ${PWD}/log/install_log
	test -d ${PWD}/log/archive || mkdir ${PWD}/log/archive
	mv ${PWD}/log/install_* ${PWD}/log/archive
}

inbase() {
	if ! [ -d $1 ]; then
		echo "error: $1 not dir!"
		exit 1;
	fi	
	NUM_FILES=`ls -1 $1 | grep ".sql" | wc -l`;
	I=1;
	echo "Add from $1:"
	while [ $(( $I - 1 )) -ne $NUM_FILES ]
	do
		TMP_STR=`ls -1 $1 | head -$I | tail -1`
		$CMD $1/$TMP_STR >> ./log/install_log 2>&1
		ERROR_CHCK=`cat ${PWD}/log/install_log | grep ERROR | wc -l;`
		echo -e "\t $I) $TMP_STR"
		if [ $ERROR_CHCK -ne 0 ];  then
			echo "error: SQL not correct!"
			cat ${PWD}/log/install_log | sed -e '/./{H;$!d;}' -e 'x;/ERROR/!d;'
			mv ${PWD}/log/install_log ${PWD}/log/install_ERR_`date +%Y%m%d_%T`;
                        loginfo ${PWD}/log/install_ERR_`date +%Y%m%d_%T`;
			exit 1;
		fi
		echo -e "\n" >> ./log/install_log
		I=$(( $I + 1 ))
	done
}

help() {
	echo -e "  -h \t for help"
	echo -e "  -i \t install [modules name from ./modules] "
	echo -e "     \t default base modules install from ./modules/base"
	echo -ne "    available modules: "
	ls ${PWD}/modules
	echo -e "  -v \t release info and about samcms"
}

loginfo() {
    echo -e "See information about craete process in logfile: $1"
}

if [ -z $1 ]; then
	help;
	exit 1;
fi

PS3="Refresh DB ${DB_DB_NAME}? ";
select DBRECREATE in "no" "yes" "quit"; do
    case $DBRECREATE in
        quit )
            echo "Exit."
            break
            ;;
        yes )
            psql -h ${DB_HOST} -U postgres -c "DROP DATABASE ${DB_DB_NAME}";
            psql -h ${DB_HOST} -U postgres -c "CREATE DATABASE ${DB_DB_NAME}";
            break
            ;;
        * )
            echo "You picked $DBRECREATE ($REPLY)"
            break
            ;;
    esac
  break
done

inbase ${PREFIX}/usr/share/samcms/modules/tables
inbase ${PREFIX}/usr/share/samcms/modules/base
inbase ${PREFIX}/usr/share/samcms/modules/doc
#inbase ${PWD}/modules/tables
#inbase ${PWD}/modules

mv ${PWD}/log/install_log ${PWD}/log/install_`date +%Y%m%d_%T`
loginfo ${PWD}/log/install_`date +%Y%m%d_%T

exit 0;